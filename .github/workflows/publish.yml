name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Setup Node.js for npm publishing
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Update version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        id: version
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "old_version=${OLD_VERSION}" >> $GITHUB_OUTPUT
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          git add package.json
          git commit -m "chore: bump version to ${NEW_VERSION}"
          git tag "v${NEW_VERSION}"
          git push origin main
          git push origin "v${NEW_VERSION}"
          
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub release (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: Release v${{ steps.version.outputs.new_version }}
          body: |
            Release v${{ steps.version.outputs.new_version }}
            
            ## Installation
            ```bash
            # Install globally
            npm install -g deno-kv-explorer
            
            # Or run directly
            bunx deno-kv-explorer
            npx deno-kv-explorer
            ```
            
            ## What's Changed
            - Version bump from ${{ steps.version.outputs.old_version }} to ${{ steps.version.outputs.new_version }}
          draft: false
          prerelease: false
